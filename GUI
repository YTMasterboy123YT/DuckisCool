local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local changeSizeSpeedRemote = ReplicatedStorage.rEvents.changeSpeedSizeRemote

local Window = Fluent:CreateWindow({
    Title = "Speed Hub X " .. Fluent.Version, 
    SubTitle = "By Duck", 
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Create Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Killer = Window:AddTab({ Title = "Killer", Icon = "" }),
    Stats = Window:AddTab({ Title = "Stats", Icon = "" }),
    AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "" }),
}

-- Input for Size
local SizeInput = Tabs.Main:AddInput("Size", {
    Title = "Size",
    Description = "Set Size",
    Default = "1", -- Default Size
    Placeholder = "Enter Size",
    Numeric = true,
    Finished = true,
    Callback = function(Value)
        local sizeValue = tonumber(Value)
        if sizeValue then
            changeSizeSpeedRemote:InvokeServer("changeSize", sizeValue)
            print("Size changed to:", sizeValue)
        else
            print("Invalid Size Value")
        end
    end
})

-- Input for Speed
local SpeedInput = Tabs.Main:AddInput("Speed", {
    Title = "Speed",
    Description = "Set Speed",
    Default = "16", -- Default Speed
    Placeholder = "Enter Speed",
    Numeric = true,
    Finished = true,
    Callback = function(Value)
        local speedValue = tonumber(Value)
        if speedValue then
            changeSizeSpeedRemote:InvokeServer("changeSpeed", speedValue)
            print("Speed changed to:", speedValue)
        else
            print("Invalid Speed Value")
        end
    end
})

-- Input for Gravity
local GravityInput = Tabs.Main:AddInput("Gravity", {
    Title = "Gravity",
    Description = "Set Gravity",
    Default = "196.2", -- Default Gravity
    Placeholder = "Enter Gravity",
    Numeric = true,
    Finished = true,
    Callback = function(Value)
        local gravityValue = tonumber(Value)
        if gravityValue then
            workspace.Gravity = gravityValue
            print("Gravity changed to:", gravityValue)
        else
            print("Invalid Gravity Value")
        end
    end
})

-- Input for Jump Power
local JumpPowerInput = Tabs.Main:AddInput("JumpPower", {
    Title = "Jump Power",
    Description = "Set Jump Power",
    Default = "50", -- Default Jump Power
    Placeholder = "Enter Jump Power",
    Numeric = true,
    Finished = true,
    Callback = function(Value)
        local jumpPowerValue = tonumber(Value)
        if jumpPowerValue then
            changeJumpPower(jumpPowerValue)
            print("Jump Power changed to:", jumpPowerValue)
        else
            print("Invalid Jump Power Value")
        end
    end
})

local function changeJumpPower(jumpPowerValue)
    for _, player in ipairs(Players:GetPlayers()) do
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.JumpPower = jumpPowerValue
            end
        end
    end
end

-- Setup SaveManager and InterfaceManager
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Notifications
Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

-- Load autoload config
SaveManager:LoadAutoloadConfig()
