local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Window = Fluent:CreateWindow({
    Title = "Speed Hub X " .. Fluent.Version,
    SubTitle = "By Duck",
    TabWidth = 160,
    Size = UDim2.fromOffset(560, 440),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Create Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Killer = Window:AddTab({ Title = "Killer", Icon = "" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "" }),
    TOOLSpeed = Window:AddTab({ Title = "TOOLSpeed", Icon = "" }),
}

-- Main Tab Inputs
local SizeInput = Tabs.Main:AddInput("Size", {
    Title = "Set Size",
    Description = "Change your character's size.",
    Default = "1",
    Placeholder = "Enter Size",
    Numeric = true,
    Finished = true,
    Callback = function(Value)
        local sizeValue = tonumber(Value)
        if sizeValue then
            ReplicatedStorage.rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", sizeValue)
        end
    end
})

local SpeedInput = Tabs.Main:AddInput("Speed", {
    Title = "Set Speed",
    Description = "Change your character's speed.",
    Default = "16",
    Placeholder = "Enter Speed",
    Numeric = true,
    Finished = true,
    Callback = function(Value)
        local speedValue = tonumber(Value)
        if speedValue then
            ReplicatedStorage.rEvents.changeSpeedSizeRemote:InvokeServer("changeSpeed", speedValue)
        end
    end
})

-- NoClip Feature
local noclipActive = false

local function toggleNoClip()
    noclipActive = not noclipActive
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    if noclipActive then
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end

        while noclipActive do
            humanoidRootPart.CFrame = humanoidRootPart.CFrame
            wait(0.1)
        end
    else
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end

Tabs.Main:AddToggle("NoClip", {
    Title = "Enable NoClip",
    Default = false,
    Callback = function(State)
        toggleNoClip()
    end
})

-- Environmental Effects Dropdown
local function setDayCycle(time)
    if time == "Noon" then
        game.Lighting.TimeOfDay = "12:00:00"
    elseif time == "Evening" then
        game.Lighting.TimeOfDay = "18:00:00"
    elseif time == "Night" then
        game.Lighting.TimeOfDay = "00:00:00"
    elseif time == "Dawn" then
        game.Lighting.TimeOfDay = "06:00:00"
    end
end

Tabs.Main:AddDropdown("DayCycle", {
    Title = "Select Day Cycle",
    Options = {"Noon", "Evening", "Night", "Dawn"},
    Default = "Noon",
    Callback = function(selected)
        setDayCycle(selected)
    end
})

-- Speed Aura Feature
local speedAuraActive = false
local auraParticle

local function toggleSpeedAura()
    speedAuraActive = not speedAuraActive
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

    if speedAuraActive then
        auraParticle = Instance.new("ParticleEmitter")
        auraParticle.Parent = character:WaitForChild("HumanoidRootPart")
        auraParticle.Texture = "rbxassetid://12345678" -- Replace with your particle texture ID
        auraParticle.Lifetime = NumberRange.new(1)
        auraParticle.Rate = 100
        auraParticle.Size = NumberSequence.new(0.5, 1)
        auraParticle.Velocity = NumberRange.new(1, 2)

        while speedAuraActive do
            local speed = character:FindFirstChildOfClass("Humanoid").WalkSpeed
            auraParticle.Enabled = speed > 16
            wait(0.1)
        end
    else
        if auraParticle then
            auraParticle:Destroy()
        end
    end
end

Tabs.Main:AddToggle("Speed Aura", {
    Title = "Enable Speed Aura",
    Default = false,
    Callback = function(State)
        toggleSpeedAura()
    end
})

-- Killer Tab (Example feature: Auto Hit)
local autoHitActive = false

local function autoHit()
    while autoHitActive do
        local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local equippedTool = character:FindFirstChildOfClass("Tool")
        if equippedTool and equippedTool.Enabled then
            equippedTool:Activate()
        end
        wait(0.1)
    end
end

Tabs.Killer:AddToggle("Auto Hit", {
    Title = "Enable Auto Hit",
    Default = false,
    Callback = function(State)
        autoHitActive = State
        if State then
            autoHit()
        end
    end
})

-- Misc Tab (Add features as needed)
Tabs.Misc:AddLabel("Misc Features")

-- TOOLSpeed Tab
local tools = {
    {name = "Punch", type = "attackTime"},
    {name = "Ground Slam", type = "attackTime"},
    {name = "Stomp", type = "attackTime"},
    {name = "Handstands", type = "repTime"},
    {name = "Pushups", type = "repTime"},
    {name = "Weight", type = "repTime"},
    {name = "Situps", type = "repTime"}
}

local function setToolProperties(value)
    local backpack = LocalPlayer:WaitForChild("Backpack")
    for _, toolInfo in pairs(tools) do
        local tool = backpack:FindFirstChild(toolInfo.name)
        if tool then
            local cooldown = tool:FindFirstChild(toolInfo.type) 
            if cooldown and cooldown:IsA("NumberValue") then
                cooldown.Value = value
            end
        end
    end
end

local ToolSpeedInput = Tabs.TOOLSpeed:AddInput("ToolSpeed", {
    Title = "Set Tool Speed",
    Description = "Change the attack/rep speed of the tools.",
    Default = "0.1",
    Placeholder = "Enter Tool Speed",
    Numeric = true,
    Finished = true,
    Callback = function(Value)
        local speedValue = tonumber(Value)
        if speedValue then
            setToolProperties(speedValue)
        end
    end
})

-- Call functions
setToolProperties(0.1)  -- Set default speed
autoHit()

-- Handle character respawn
LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    autoHit()
end)

-- Setup SaveManager and InterfaceManager
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

-- Load autoload config
SaveManager:LoadAutoloadConfig()
