local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source.lua'))()

local Window = OrionLib:MakeWindow({
    Name = "My Game Utility",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "MyGameConfig",
    IntroEnabled = true,
    IntroText = "Welcome to My Utility",
    IntroIcon = "rbxassetid://95093869224117",
    Icon = "rbxassetid://987654321",
})

-- Main Tab
local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://123456789",
    Premium = false,
})

-- Walk Speed
MainTab:AddLabel("Set Walk Speed:")
MainTab:AddTextBox("Enter Walk Speed", "Default: 16", true, function(value)
    local player = game.Players.LocalPlayer
    player.Character.Humanoid.WalkSpeed = tonumber(value) or 16
end)

-- Jump Power
MainTab:AddLabel("Set Jump Power:")
MainTab:AddTextBox("Enter Jump Power", "Default: 50", true, function(value)
    local player = game.Players.LocalPlayer
    player.Character.Humanoid.JumpPower = tonumber(value) or 50
end)

-- Gravity Button
MainTab:AddButton("Set Gravity to 50", function()
    workspace.Gravity = 50
end)

-- Time of Day Dropdown
MainTab:AddDropdown("Time of Day", {"Morning", "Afternoon", "Night"}, function(selected)
    local Lighting = game:GetService("Lighting")
    if selected == "Morning" then
        Lighting.Brightness = 2
    elseif selected == "Afternoon" then
        Lighting.Brightness = 3
    elseif selected == "Night" then
        Lighting.Brightness = 0.5
    end
end)

-- Enable No Clip Button
MainTab:AddButton("Enable No Clip", function()
    local Players = game:GetService("Players")
    local character = Players.LocalPlayer.Character
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
        end
    end
end)

-- Enable Infinite Jump Button
MainTab:AddButton("Enable Infinite Jump", function()
    local UserInputService = game:GetService("UserInputService")
    UserInputService.JumpRequest:Connect(function()
        local player = game.Players.LocalPlayer
        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end)
end)

-- Killer Tab
local KillerTab = Window:MakeTab({
    Name = "Killer",
    Icon = "rbxassetid://123456789",
    Premium = false,
})

KillerTab:AddToggle({
    Name = "Auto Hit",
    Default = false,
    Callback = function(value)
        local punching = false
        local toolName = "Punch"

        local function setToolCooldowns()
            local tools = { { name = toolName, type = "attackTime" } }
            for _, toolInfo in pairs(tools) do
                local tool = game.Players.LocalPlayer.Backpack:FindFirstChild(toolInfo.name) or game.Players.LocalPlayer.Character:FindFirstChild(toolInfo.name)
                if tool then
                    local cooldown = tool:FindFirstChild(toolInfo.type)
                    if cooldown then
                        cooldown.Value = 0.1
                    end
                end
            end
        end

        local function autoUseTool()
            setToolCooldowns()
            while punching do
                local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                local tool = game.Players.LocalPlayer.Backpack:FindFirstChild(toolName) or character:FindFirstChild(toolName)

                if tool then
                    if tool.Parent ~= character then
                        humanoid:EquipTool(tool)
                    end
                    tool:Activate()
                    wait(0.1)
                else
                    wait(0.5)
                end
            end
        end

        punching = value
        if punching then
            autoUseTool()
        end
    end
})

KillerTab:AddParagraph("Commands", "/kill\n/Off\n/NK \"User\"")

-- Auto Farm Tab
local AutoFarmTab = Window:MakeTab({
    Name = "Auto Farm",
    Icon = "rbxassetid://123456789",
    Premium = false,
})

AutoFarmTab:AddDropdown("Select Rock", {"Muscle King Mountain", "Frozen Rock", "Rock Of Legends"}, function(selected)
    local function teleportRockToHand(rockFolderName)
        local machinesFolder = game.Workspace:FindFirstChild("machinesFolder")
        if machinesFolder then
            local rockFolder = machinesFolder:FindFirstChild(rockFolderName)
            if rockFolder then
                local rock = rockFolder:FindFirstChild("Rock")
                if rock then
                    rock.Transparency = 1
                    rock.Size = Vector3.new(0.5, 0.5, 0.5)
                    rock.CanCollide = false
                    while wait(0.1) do
                        if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("RightHand") then
                            rock.CFrame = game.Players.LocalPlayer.Character.RightHand.CFrame * CFrame.new(0, 0, -1)
                        end
                    end
                end
            end
        end
    end
    teleportRockToHand(selected)
end)

-- Stats Tab
local StatsTab = Window:MakeTab({
    Name = "Stats",
    Icon = "rbxassetid://123456789",
    Premium = false,
})

StatsTab:AddDropdown("Select Player", function(playerName)
    local Players = game:GetService("Players")
    local targetPlayer = Players:FindFirstChild(playerName)
    
    if targetPlayer then
        local statsString = ""
        local leaderstats = targetPlayer:FindFirstChild("leaderstats")
        if leaderstats then
            for _, stat in pairs(leaderstats:GetChildren()) do
                statsString = statsString .. stat.Name .. ": " .. tostring(stat.Value) .. "\n"
            end
        end

        -- Show stats in a GUI
        local statsGui = Instance.new("ScreenGui")
        local frame = Instance.new("Frame")
        frame.Parent = statsGui
        statsGui.Parent = game.CoreGui
        frame.Size = UDim2.new(0.5, 0, 0.5, 0)
        frame.Position = UDim2.new(0.5, -125, 0.5, -125)
        frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)

        local titleLabel = Instance.new("TextLabel")
        titleLabel.Size = UDim2.new(1, 0, 0.2, 0)
        titleLabel.Text = "Stats for " .. targetPlayer.Name
        titleLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        titleLabel.TextScaled = true
        titleLabel.Parent = frame

        local statsList = Instance.new("TextLabel")
        statsList.Size = UDim2.new(1, 0, 0.6, 0)
        statsList.Position = UDim2.new(0, 0, 0.2, 0)
        statsList.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        statsList.TextColor3 = Color3.fromRGB(255, 255, 255)
        statsList.TextScaled = true
        statsList.TextWrapped = true
        statsList.TextSize = 20
        statsList.Text = statsString
        statsList.Parent = frame

        local closeButton = Instance.new("TextButton")
        closeButton.Size = UDim2.new(0.4, 0, 0.1, 0)
        closeButton.Position = UDim2.new(0.5, -80, 0.85, 0)
        closeButton.Text = "Close"
        closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        closeButton.Parent = frame

        closeButton.MouseButton1Click:Connect(function()
            statsGui:Destroy()
        end)
    end
end)

print("All tabs and functions are set up!")
