local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local backpack = LocalPlayer:WaitForChild("Backpack")

local Window = Fluent:CreateWindow({
    Title = "Speed Hub X " .. Fluent.Version,
    SubTitle = "By Duck",
    TabWidth = 160,
    Size = UDim2.fromOffset(560, 440),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Create Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Killer = Window:AddTab({ Title = "Killer", Icon = "" }),
    FarmSpeed = Window:AddTab({ Title = "FarmSpeed", Icon = "" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "" }) -- New Misc tab
})

-- Main Tab: Set Size and Speed
Tabs.Main:AddInput("SetSize", {
    Title = "Set Size",
    Default = "1",
    Placeholder = "Enter Size",
    Numeric = true,
    Finished = true,
    Callback = function(Value)
        local sizeValue = tonumber(Value)
        if sizeValue then
            ReplicatedStorage.rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", sizeValue)
        end
    end
})

Tabs.Main:AddInput("SetSpeed", {
    Title = "Set Speed",
    Default = "16",
    Placeholder = "Enter Speed",
    Numeric = true,
    Finished = true,
    Callback = function(Value)
        local speedValue = tonumber(Value)
        if speedValue then
            ReplicatedStorage.rEvents.changeSpeedSizeRemote:InvokeServer("changeSpeed", speedValue)
        end
    end
})

-- Anti AFK
local function antiAFK()
    while true do
        LocalPlayer.Idled:Wait()
        LocalPlayer:Move(Vector3.new(0, 0, 0))
        wait(1)
    end
end

Tabs.Misc:AddToggle("AntiAFK", {
    Title = "Anti AFK",
    Default = false,
    Callback = function(state)
        if state then
            antiAFK()
        end
    end
})

-- Lock Position
local lockPositionActive = false
local function lockPosition()
    while lockPositionActive do
        LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
        wait(0.1)
    end
end

Tabs.Misc:AddToggle("LockPosition", {
    Title = "Lock Position",
    Default = false,
    Callback = function(state)
        lockPositionActive = state
        if state then
            lockPosition()
        end
    end
})

-- Auto Hit in Killer Tab
local player = LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local tools = {
    {name = "Punch", type = "attackTime"},
    {name = "Ground Slam", type = "attackTime"},
    {name = "Stomp", type = "attackTime"},
    {name = "Handstands", type = "repTime"},
    {name = "Pushups", type = "repTime"},
    {name = "Weight", type = "repTime"},
    {name = "Situps", type = "repTime"}
}

local function setToolProperties()
    for _, toolInfo in pairs(tools) do
        local tool = backpack:FindFirstChild(toolInfo.name)
        if tool then
            local cooldown = tool:FindFirstChild(toolInfo.type)
            if cooldown and cooldown:IsA("NumberValue") then
                cooldown.Value = 0.1
            end
        end
    end
end

local function autoHit()
    while true do
        local equippedTool = character:FindFirstChildOfClass("Tool")
        if equippedTool and equippedTool.Enabled then
            equippedTool:Activate()
        end
        wait(0.1)
    end
end

local autoHitActive = false
Tabs.Killer:AddToggle("AutoHit", {
    Title = "Auto Hit",
    Default = false,
    Callback = function(state)
        autoHitActive = state
        if state then
            setToolProperties()
            spawn(autoHit)
        end
    end
})

player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    backpack = player:WaitForChild("Backpack")
    setToolProperties()
end)

-- FarmSpeed Tab: Tool Attribute Inputs
for _, tool in ipairs(tools) do
    Tabs.FarmSpeed:AddInput(tool.name .. " Attribute", {
        Title = tool.name .. " " .. tool.type,
        Default = "0.1",
        Placeholder = "Enter Value",
        Numeric = true,
        Finished = true,
        Callback = function(Value)
            local newValue = tonumber(Value)
            if newValue then
                local tool = backpack:FindFirstChild(tool.name)
                if tool then
                    tool[tool.type].Value = newValue
                end
            end
        end
    })
end

-- Setup SaveManager and InterfaceManager
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

Fluent:Notify({
    Title = "Speed Hub X",
    Content = "The script has been loaded.",
    Duration = 8
})

-- Load autoload config
SaveManager:LoadAutoloadConfig()
