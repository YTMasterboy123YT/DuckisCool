local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({
    Name = "Ducks Private Script", 
    HidePremium = false, 
    SaveConfig = true, 
    ConfigFolder = "OrionTest",
    IntroEnabled = true,
    IntroText = "Welcome to Ducks Private Script!", 
    IntroIcon = "https://i.imgur.com/dWXaDfO.jpg"
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Global variables
_G.noKillList = {}
_G.killList = {}

-- Main Tab
local MainTab = Window:MakeTab({
    Name = "Main Tab",
    Icon = "rbxassetid://132359476107633",
    PremiumOnly = false
})

MainTab:AddLabel("Main Tab - Duck")

-- Add textboxes for speed, jump, and gravity
MainTab:AddTextbox({
    Name = "Speed Changer",
    Default = "16",
    TextDisappear = true,
    Callback = function(Value)
        local speedValue = tonumber(Value) or 16
        for _, player in ipairs(Players:GetPlayers()) do
            local character = player.Character
            if character then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.WalkSpeed = speedValue
                end
            end
        end
    end
})

MainTab:AddTextbox({
    Name = "Jump Changer",
    Default = "50",
    TextDisappear = true,
    Callback = function(Value)
        local jumpPowerValue = tonumber(Value) or 50
        for _, player in ipairs(Players:GetPlayers()) do
            local character = player.Character
            if character then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.JumpPower = jumpPowerValue
                end
            end
        end
    end
})

MainTab:AddTextbox({
    Name = "Gravity Changer",
    Default = "196.2",
    TextDisappear = true,
    Callback = function(Value)
        local gravityValue = tonumber(Value) or 196.2
        workspace.Gravity = gravityValue
    end
})

-- Killer Tab
local KillerTab = Window:MakeTab({
    Name = "Killer Tab",
    Icon = "rbxassetid://132359476107633",
    PremiumOnly = false
})

KillerTab:AddLabel("Killer - Duck")

-- Auto Hit Toggle
KillerTab:AddToggle({
    Name = "Auto Hit",
    Default = false,
    Callback = function(Value)
        local punching = Value
        local toolName = "Punch"
        
        local function setToolCooldowns()
            local tools = {
                {name = toolName, type = "attackTime"}
            }

            for _, toolInfo in pairs(tools) do
                local tool = LocalPlayer.Backpack:FindFirstChild(toolInfo.name) or LocalPlayer.Character:FindFirstChild(toolInfo.name)
                if tool then
                    local cooldown = tool:FindFirstChild(toolInfo.type)
                    if cooldown then
                        cooldown.Value = 0.1
                    end
                end
            end
        end

        local function autoUseTool()
            setToolCooldowns()

            while punching do
                local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                local tool = LocalPlayer.Backpack:FindFirstChild(toolName) or character:FindFirstChild(toolName)

                if tool then
                    if tool.Parent ~= character then
                        humanoid:EquipTool(tool)
                    end
                    tool:Activate()
                    wait(0.1)
                else
                    wait(0.5)
                end
            end
        end

        if punching then
            print("Auto-hitting started.")
            autoUseTool()
        else
            print("Auto-hitting stopped.")
        end
    end
})

-- Player Tab
local PlayerTab = Window:MakeTab({
    Name = "Players Tab",
    Icon = "rbxassetid://132359476107633",
    PremiumOnly = false
})

PlayerTab:AddLabel("Select Players for No-Kill List")

-- Create toggle buttons for each player
for _, player in ipairs(Players:GetPlayers()) do
    PlayerTab:AddToggle({
        Name = player.Name,
        Default = false,
        Callback = function(Value)
            if Value then
                _G.noKillList[player.Name] = true
                print(player.Name .. " added to No-Kill list.")
            else
                _G.noKillList[player.Name] = nil
                print(player.Name .. " removed from No-Kill list.")
            end
        end
    })
end

-- Function to update player list when a player joins or leaves
Players.PlayerAdded:Connect(function(player)
    PlayerTab:AddToggle({
        Name = player.Name,
        Default = false,
        Callback = function(Value)
            if Value then
                _G.noKillList[player.Name] = true
                print(player.Name .. " added to No-Kill list.")
            else
                _G.noKillList[player.Name] = nil
                print(player.Name .. " removed from No-Kill list.")
            end
        end
    })
end)

Players.PlayerRemoving:Connect(function(player)
    _G.noKillList[player.Name] = nil
    print(player.Name .. " removed from No-Kill list.")
end)

print("Script Loaded. Use the tabs to manage game settings and player interactions.")
