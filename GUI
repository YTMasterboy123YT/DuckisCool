-- Define services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source.lua'))()

-- Create the main GUI
local Window = OrionLib:MakeWindow({
    Name = "Game Utility",
    IntroIcon = "rbxassetid://95093869224117",
    HidePremium = false,
})

-- Main Tab
local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
})

-- Time settings function
local function setLighting(timeOfDay)
    local Lighting = game:GetService("Lighting")
    if timeOfDay == "morning" then
        Lighting.Brightness = 2
        Lighting.ColorShift_Tint = Color3.fromRGB(255, 200, 150)
        Lighting.OutdoorAmbient = Color3.fromRGB(200, 200, 255)
    elseif timeOfDay == "afternoon" then
        Lighting.Brightness = 3
        Lighting.ColorShift_Tint = Color3.fromRGB(255, 255, 255)
        Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)
    elseif timeOfDay == "night" then
        Lighting.Brightness = 0.5
        Lighting.ColorShift_Tint = Color3.fromRGB(50, 50, 100)
        Lighting.OutdoorAmbient = Color3.fromRGB(20, 20, 40)
    end
end

-- Dropdown for time of day
MainTab:AddDropdown({
    Name = "Time of Day",
    Options = {"morning", "afternoon", "night"},
    Callback = function(selectedTime)
        setLighting(selectedTime)
    end,
})

-- NoClip function
local function setNoClip(character, value)
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = not value
        end
    end
end

MainTab:AddButton({
    Name = "Enable NoClip",
    Callback = function()
        for _, player in ipairs(Players:GetPlayers()) do
            local character = player.Character
            if character then
                setNoClip(character, true) -- Enable no clip
            end
        end
    end,
})

-- Infinite Jump function
local function enableInfiniteJump()
    UserInputService.JumpRequest:Connect(function()
        local character = LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
    end)
end

MainTab:AddButton({
    Name = "Enable Infinite Jump",
    Callback = function()
        enableInfiniteJump()
    end,
})

-- Stats Tab
local StatsTab = Window:MakeTab({
    Name = "Stats",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
})

-- Function to create and display a stats GUI
local function createStatsGui(stats)
    local statsGui = Instance.new("ScreenGui")
    local frame = Instance.new("Frame")
    local closeButton = Instance.new("TextButton")

    statsGui.Name = "StatsGui"
    statsGui.Parent = game.CoreGui

    frame.Size = UDim2.new(0.5, 0, 0.5, 0)
    frame.Position = UDim2.new(0.5, -125, 0.5, -125)
    frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    frame.BorderSizePixel = 0
    frame.Parent = statsGui

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 0.2, 0)
    titleLabel.Text = "Stats"
    titleLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextScaled = true
    titleLabel.Parent = frame

    local statsList = Instance.new("TextLabel")
    statsList.Size = UDim2.new(1, 0, 0.6, 0)
    statsList.Position = UDim2.new(0, 0, 0.2, 0)
    statsList.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    statsList.TextColor3 = Color3.fromRGB(255, 255, 255)
    statsList.TextScaled = true
    statsList.TextWrapped = true
    statsList.TextSize = 20
    statsList.Text = stats
    statsList.Parent = frame

    closeButton.Size = UDim2.new(0.4, 0, 0.1, 0)
    closeButton.Position = UDim2.new(0.5, -80, 0.85, 0)
    closeButton.Text = "Close"
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.Parent = frame

    closeButton.MouseButton1Click:Connect(function()
        statsGui:Destroy()
    end)
end

-- Function to display stats for a player
local function displayPlayerStats(player)
    local statsString = ""

    local leaderstats = player:FindFirstChild("leaderstats")
    if leaderstats then
        for _, stat in pairs(leaderstats:GetChildren()) do
            statsString = statsString .. stat.Name .. ": " .. tostring(stat.Value) .. "\n"
        end
    else
        statsString = "No leaderstats found."
    end

    local additionalStats = {"Durability", "Agility", "goodKarma", "evilKarma", "Gems", "muscleKingTime"}
    for _, statName in ipairs(additionalStats) do
        local stat = player:FindFirstChild(statName)
        if stat then
            statsString = statsString .. statName .. ": " .. tostring(stat.Value) .. "\n"
        else
            statsString = statsString .. statName .. " not found.\n"
        end
    end

    createStatsGui(statsString)
end

-- Dropdown for players in Stats tab
StatsTab:AddDropdown({
    Name = "Select Player",
    Options = Players:GetPlayers(),
    CurrentOption = Players.LocalPlayer.Name,
    Callback = function(selectedPlayer)
        local player = Players:FindFirstChild(selectedPlayer)
        if player then
            displayPlayerStats(player)
        end
    end,
})

-- Killer Tab
local KillerTab = Window:MakeTab({
    Name = "Killer",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
})

local punching = false
local toolName = "Punch"

-- Function to set tool cooldowns
local function setToolCooldowns()
    local tools = {
        {name = toolName, type = "attackTime"}
    }

    for _, toolInfo in pairs(tools) do
        local tool = LocalPlayer.Backpack:FindFirstChild(toolInfo.name) or LocalPlayer.Character:FindFirstChild(toolInfo.name)
        if tool then
            local cooldown = tool:FindFirstChild(toolInfo.type)
            if cooldown then
                cooldown.Value = 0.1 -- Set the cooldown value
            end
        end
    end
end

local function autoUseTool()
    setToolCooldowns()
    while punching do
        local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        local tool = LocalPlayer.Backpack:FindFirstChild(toolName) or character:FindFirstChild(toolName)

        if tool then
            if tool.Parent ~= character then
                humanoid:EquipTool(tool)
            end
            tool:Activate()
            wait(0.1)
        else
            wait(0.5)
        end
    end
end

local function toggleAutoPunch(value)
    punching = value
    if punching then
        autoUseTool()
    end
end

KillerTab:AddToggle({
    Name = "Auto Hit",
    Default = false,
    Callback = function(state)
        toggleAutoPunch(state)
    end,
})

KillerTab:AddTextBox({
    Name = "Hit Speed (seconds)",
    PlaceholderText = "Enter hit speed",
    Text = "0.1",
    Callback = function(hitSpeed)
        local speed = tonumber(hitSpeed)
        if speed then
            wait(speed)
        end
    end,
})

KillerTab:AddParagraph("Commands", "Use these commands in chat:\n/kill\n/Off\n/NK \"User\"")

print("Game Utility Loaded!")
