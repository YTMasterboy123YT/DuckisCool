local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({
    Name = "Ducks Private Script", 
    HidePremium = false, 
    SaveConfig = true, 
    ConfigFolder = "OrionTest",
    IntroEnabled = true,
    IntroText = "Welcome to Ducks Private Script!", 
    IntroIcon = "https://i.imgur.com/dWXaDfO.jpg"
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Global lists for no-kill and kill players
local noKillList = {}
local killList = {}

-- Killer Tab
local KillerTab = Window:MakeTab({
    Name = "Killer Tab",
    Icon = "rbxassetid://132359476107633",
    PremiumOnly = false
})

KillerTab:AddLabel("Killer - Duck")

-- Auto Hit Toggle
KillerTab:AddToggle({
    Name = "Auto Hit",
    Default = false,
    Callback = function(Value)
        local punching = Value
        local toolName = "Punch"
        
        local function setToolCooldowns()
            local tools = {
                {name = toolName, type = "attackTime"}
            }

            for _, toolInfo in pairs(tools) do
                local tool = LocalPlayer.Backpack:FindFirstChild(toolInfo.name) or LocalPlayer.Character:FindFirstChild(toolInfo.name)
                if tool then
                    local cooldown = tool:FindFirstChild(toolInfo.type)
                    if cooldown then
                        cooldown.Value = 0.1
                    end
                end
            end
        end

        local function autoUseTool()
            setToolCooldowns()

            while punching do
                local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                local tool = LocalPlayer.Backpack:FindFirstChild(toolName) or character:FindFirstChild(toolName)

                if tool then
                    if tool.Parent ~= character then
                        humanoid:EquipTool(tool)
                    end
                    tool:Activate()
                    wait(0.1)
                else
                    wait(0.5)
                end
            end
        end

        if punching then
            print("Auto-hitting started.")
            autoUseTool()
        else
            print("Auto-hitting stopped.")
        end
    end
})

-- Function to create player buttons with glow effect
local function createPlayerButton(playerName)
    local isSelected = false

    local button = KillerTab:AddButton({
        Name = playerName,
        Callback = function()
            isSelected = not isSelected -- Toggle selection

            -- Change button appearance based on selection
            if isSelected then
                button.TextColor3 = Color3.fromRGB(0, 255, 0) -- Change text color to green
                button.BackgroundColor3 = Color3.fromRGB(50, 50, 50) -- Darker background
                noKillList[playerName] = true -- Add to No-Kill List
            else
                button.TextColor3 = Color3.fromRGB(255, 255, 255) -- Reset text color
                button.BackgroundColor3 = Color3.fromRGB(30, 30, 30) -- Reset background
                noKillList[playerName] = nil -- Remove from No-Kill List
            end

            -- Update Kill List
            for _, player in ipairs(Players:GetPlayers()) do
                if not noKillList[player.Name] then
                    killList[player.Name] = true -- Add to Kill List
                else
                    killList[player.Name] = nil -- Remove from Kill List
                end
            end
        end
    })
end

-- Create buttons for all players
for _, player in ipairs(Players:GetPlayers()) do
    createPlayerButton(player.Name)
end

print("Player buttons created with selection toggle and glow effect.")

-- Auto Hit Functionality (Toggle)
-- Add additional tabs here as needed

print("Script Loaded. Use the tabs to manage game settings and player interactions.")
