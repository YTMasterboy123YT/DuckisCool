local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({
    Name = "Ducks Private Script", 
    HidePremium = false, 
    SaveConfig = true, 
    ConfigFolder = "OrionTest",
    IntroEnabled = true,
    IntroText = "Welcome to Ducks Private Script!", 
    IntroIcon = "https://i.imgur.com/dWXaDfO.jpg"
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ScreenGui = Instance.new("ScreenGui")
local Notification = Instance.new("TextLabel")

_G.teleportPlayersActive = false
_G.noKillList = {}
_G.killList = {}

local function showNotification(message)
    Notification.Text = message
    Notification.Size = UDim2.new(0.3, 0, 0.1, 0)
    Notification.Position = UDim2.new(0.5, -75, 0.1, 0)
    Notification.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Notification.TextColor3 = Color3.fromRGB(255, 255, 255)
    Notification.TextScaled = true
    Notification.Parent = ScreenGui

    ScreenGui.Parent = game.CoreGui

    for i = 1, 10 do
        wait(0.1)
        Notification.TextTransparency = i / 10
    end

    ScreenGui:Destroy()
end

local function teleportPlayers()
    while _G.teleportPlayersActive do
        wait(0.1)
        for _, otherPlayer in pairs(Players:GetPlayers()) do
            if otherPlayer ~= LocalPlayer and not _G.noKillList[otherPlayer.Name] then
                local targetCharacter = otherPlayer.Character
                if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
                    targetCharacter:SetPrimaryPartCFrame(LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 5, 0))
                end
            end
        end
    end
end

local function bringUserParts(user)
    while _G.killList[user] do
        wait(0.1)
        local targetPlayer = Players:FindFirstChild(user)
        if targetPlayer and targetPlayer.Character then
            for _, part in pairs(targetPlayer.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 5, 0)
                end
            end
        else
            _G.killList[user] = nil
            break
        end
    end
end

-- Main Tab
local MainTab = Window:MakeTab({
    Name = "Main Tab",
    Icon = "rbxassetid://132359476107633",
    PremiumOnly = false
})

MainTab:AddLabel("Main Tab - Duck")

MainTab:AddTextbox({
    Name = "Speed Changer",
    Default = "16",
    TextDisappear = true,
    Callback = function(Value)
        local speedValue = tonumber(Value) or 16
        for _, player in ipairs(Players:GetPlayers()) do
            local character = player.Character
            if character then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.WalkSpeed = speedValue
                end
            end
        end
    end
})

MainTab:AddTextbox({
    Name = "Jump Changer",
    Default = "50",
    TextDisappear = true,
    Callback = function(Value)
        local jumpPowerValue = tonumber(Value) or 50
        for _, player in ipairs(Players:GetPlayers()) do
            local character = player.Character
            if character then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.JumpPower = jumpPowerValue
                end
            end
        end
    end
})

MainTab:AddTextbox({
    Name = "Gravity Changer",
    Default = "196.2",
    TextDisappear = true,
    Callback = function(Value)
        local gravityValue = tonumber(Value) or 196.2
        workspace.Gravity = gravityValue
    end
})

-- Dropdown for setting game time
MainTab:AddDropdown({
    Name = "Set Time of Day",
    Options = {"Morning", "Afternoon", "Night"},
    Callback = function(selected)
        if selected == "Morning" then
            game.Lighting.ClockTime = 6
        elseif selected == "Afternoon" then
            game.Lighting.ClockTime = 12
        elseif selected == "Night" then
            game.Lighting.ClockTime = 18
        end
    end
})

-- Killer Tab
local KillerTab = Window:MakeTab({
    Name = "Killer Tab",
    Icon = "rbxassetid://132359476107633",
    PremiumOnly = false
})

KillerTab:AddLabel("Killer - Duck")

local playerNames = {}
for _, player in ipairs(Players:GetPlayers()) do
    table.insert(playerNames, player.Name)
end

-- No-Kill List Multi-Select
KillerTab:AddDropdown({
    Name = "Select Players for No-Kill List",
    Options = playerNames,
    MultiSelect = true,
    Callback = function(selectedPlayers)
        for _, player in ipairs(selectedPlayers) do
            _G.noKillList[player] = true
        end
        showNotification("Added to no-kill list: " .. table.concat(selectedPlayers, ", "))
    end
})

-- Kill List Multi-Select
KillerTab:AddDropdown({
    Name = "Select Players for Kill List",
    Options = playerNames,
    MultiSelect = true,
    Callback = function(selectedPlayers)
        for _, player in ipairs(selectedPlayers) do
            _G.killList[player] = true
            showNotification("Started bringing " .. player .. "'s parts to you.")
            bringUserParts(player)
        end
    end
})

-- Button to toggle player teleportation
KillerTab:AddButton({
    Name = "Toggle Teleport Players",
    Callback = function()
        _G.teleportPlayersActive = not _G.teleportPlayersActive
        if _G.teleportPlayersActive then
            teleportPlayers()
            showNotification("Started teleporting players.")
        else
            showNotification("Stopped teleporting players.")
        end
    end
})

-- Auto Hit Toggle
local autoHitActive = false
KillerTab:AddToggle({
    Name = "Auto Hit",
    Default = false,
    Callback = function(Value)
        autoHitActive = Value
        
        local toolName = "Punch"
        
        local function setToolCooldowns()
            local tools = {
                {name = toolName, type = "attackTime"}
            }

            for _, toolInfo in pairs(tools) do
                local tool = LocalPlayer.Backpack:FindFirstChild(toolInfo.name) or LocalPlayer.Character:FindFirstChild(toolInfo.name)
                if tool then
                    local cooldown = tool:FindFirstChild(toolInfo.type)
                    if cooldown then
                        cooldown.Value = 0.1
                    end
                end
            end
        end

        local function autoUseTool()
            setToolCooldowns()

            while autoHitActive do
                local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                local tool = LocalPlayer.Backpack:FindFirstChild(toolName) or character:FindFirstChild(toolName)

                if tool then
                    if tool.Parent ~= character then
                        humanoid:EquipTool(tool)
                    end
                    tool:Activate()
                    wait(0.1)
                else
                    wait(0.5)
                end
            end
        end

        if autoHitActive then
            print("Auto-hitting started.")
            autoUseTool()
        else
            print("Auto-hitting stopped.")
        end
    end
})

print("Script Loaded. Use the tabs to manage game settings and player interactions.")
