local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local function performBackflip()
    if humanoid then
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)  -- Start the jump

        -- Rotate the character slowly for the backflip
        for i = 1, 180, 5 do
            character:SetPrimaryPartCFrame(character.PrimaryPart.CFrame * CFrame.Angles(0, math.rad(5), 0))
            wait(0.05)  -- Adjust for speed of rotation
        end

        -- Simulate landing
        humanoid:ChangeState(Enum.HumanoidStateType.Freefall)  -- Reset state to allow landing
        wait(0.2)  -- Wait briefly before landing effect

        -- Adjust the character's orientation to land on feet
        character:SetPrimaryPartCFrame(character.PrimaryPart.CFrame * CFrame.Angles(math.rad(-90), 0, 0))
        humanoid:ChangeState(Enum.HumanoidStateType.Physics)  -- Set the character to physics state
        wait(0.1)  -- Delay before returning to normal

        -- Reset character orientation to normal standing position
        character:SetPrimaryPartCFrame(character.PrimaryPart.CFrame * CFrame.Angles(math.rad(90), 0, 0))
    end
end

-- Toggle to perform the backflip
MainTab:AddToggle("BackflipToggle", {
    Title = "Perform Backflip",
    Default = false,
    Callback = function(state)
        if state then
            performBackflip()
        end
    end
})
