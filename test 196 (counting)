local player = game.Players.LocalPlayer
local backpack = player:WaitForChild("Backpack")
local replicatedStorage = game:GetService("ReplicatedStorage")
local character = player.Character or player.CharacterAdded:Wait()

local tools = {
    {name = "Punch", type = "attackTime"},
    {name = "Pushups", type = "repTime"},
}

local function equipTools()
    for _, toolInfo in pairs(tools) do
        local tool = replicatedStorage:FindFirstChild(toolInfo.name)
        if tool then
            local newTool = tool:Clone() -- Clone the tool
            newTool.Parent = backpack -- Equip the tool
        else
            warn(toolInfo.name .. " not found in ReplicatedStorage!")
        end
    end
end

local function setToolProperties()
    for _, toolInfo in pairs(tools) do
        local tool = backpack:FindFirstChild(toolInfo.name)
        if tool then
            local cooldown = tool:FindFirstChild(toolInfo.type) 
            if cooldown and cooldown:IsA("NumberValue") then
                cooldown.Value = 0.1 -- Set the cooldown for the tool
            end
        end
    end
end

local function autoLift()
    while true do
        local punchTool = backpack:FindFirstChild("Punch")
        local pushupsTool = backpack:FindFirstChild("Pushups")

        -- Activate the Punch tool if it's equipped
        if punchTool and punchTool.Enabled then
            punchTool:Activate()
        end

        -- Activate the Pushups tool if it's equipped
        if pushupsTool and pushupsTool.Enabled then
            pushupsTool:Activate()
        end
        
        wait(0.1) -- Adjust this to control the frequency of activation
    end
end

-- Muscle King Mountain integration
local function setupMuscleKingMountain()
    local machinesFolder = game.Workspace:FindFirstChild("machinesFolder")
    if not machinesFolder then
        warn("machinesFolder not found!")
        return
    end

    local muscleKingMountain = machinesFolder:FindFirstChild("Muscle King Mountain")
    if not muscleKingMountain then
        warn("Muscle King Mountain not found!")
        return
    end

    local rockPart = muscleKingMountain:FindFirstChild("Rock")
    if not rockPart then
        warn("Rock not found!")
        return
    end

    -- Delete all StatLabels
    for _, child in ipairs(muscleKingMountain:GetChildren()) do
        if child:IsA("TextLabel") and string.match(child.Name, "StatLabel") then
            child:Destroy()
        end
    end

    -- Delete rockName if it exists
    local rockName = rockPart:FindFirstChild("rockName")
    if rockName then
        rockName:Destroy()
    end

    -- Teleport the rock to the player's right hand CFrame
    rockPart.CFrame = character.RightHand.CFrame * CFrame.new(0, 1, 0) -- Position above the right hand
    rockPart.Size = Vector3.new(2, 2, 2) -- Set size when activated
end

-- Equip both tools when the script starts
equipTools()
setToolProperties()
setupMuscleKingMountain() -- Setup the Muscle King Mountain
autoLift()

-- Reset for new characters
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    backpack = player:WaitForChild("Backpack")
    equipTools() -- Re-equip tools on respawn
    setToolProperties()
    setupMuscleKingMountain() -- Setup for the new character
    autoLift()
end)
