local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")

local webhookUrl = "https://discord.com/api/webhooks/1301012434533879908/nOzQvI_8UIyXSbYvPvla8tUDQYgXRqHsu-94Alx-GVlgXoO6KcBxTEqGDANndeX6ct7S"

Players.PlayerAdded:Connect(function(player)
    local leaderstats = Instance.new("Folder")
    leaderstats.Name = "leaderstats"
    leaderstats.Parent = player

    -- Define your stats
    local stats = {
        Strength = Instance.new("IntValue", leaderstats),
        Rebirths = Instance.new("IntValue", leaderstats),
        Kills = Instance.new("IntValue", leaderstats),
        Brawls = Instance.new("IntValue", leaderstats),
    }

    for statName, stat in pairs(stats) do
        stat.Name = statName
        stat.Value = 0
    end

    local function sendToDiscord()
        local messageData = {
            content = string.format("Player Stats:\nName: %s\nStrength: %d\nRebirths: %d\nKills: %d\nBrawls: %d",
                player.Name, stats.Strength.Value, stats.Rebirths.Value, stats.Kills.Value, stats.Brawls.Value)
        }

        local jsonData = HttpService:JSONEncode(messageData)

        local success, response = pcall(function()
            return HttpService:PostAsync(webhookUrl, jsonData, Enum.HttpContentType.ApplicationJson)
        end)

        if not success then
            warn("Failed to send data to Discord: " .. response)
        end
    end

    sendToDiscord()  -- Send data on player join
    for _, stat in pairs(stats) do
        stat.Changed:Connect(sendToDiscord)  -- Send data on stat change
    end
end)
