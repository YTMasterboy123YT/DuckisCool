local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Fluent " .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

-- Killer functionalities
local autoHitActive = false
local teleportPlayersActive = false
local turnAccessoriesInvisibleActive = false
local backpack = LocalPlayer:WaitForChild("Backpack")
local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

local tools = {
    {name = "Punch", type = "attackTime"},
}

local function setToolProperties()
    for _, toolInfo in pairs(tools) do
        local tool = backpack:FindFirstChild(toolInfo.name)
        if tool then
            local cooldown = tool:FindFirstChild(toolInfo.type)
            if cooldown and cooldown:IsA("NumberValue") then
                cooldown.Value = 0.1
            end
        end
    end
end

local function autoHit()
    while autoHitActive do
        local equippedTool = character:FindFirstChildOfClass("Tool")
        if equippedTool and equippedTool.Enabled then
            equippedTool:Activate()
        end
        wait(0.1)
    end
end

local function anchorCharacter(character, anchor)
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") then
            part.Anchored = anchor
        end
    end
end

local function teleportHeads()
    local localLeftHand = LocalPlayer.Character:FindFirstChild("LeftHand")
    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= LocalPlayer then
            local targetCharacter = otherPlayer.Character
            if targetCharacter then
                local head = targetCharacter:FindFirstChild("Head")
                anchorCharacter(targetCharacter, true)
                if head and localLeftHand then
                    local handPosition = localLeftHand.Position
                    head.CFrame = CFrame.new(handPosition + Vector3.new(0, 0, 0)) -- Adjusted to 0
                end
            end
        end
    end
end

local function turnAccessoriesInvisible()
    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= LocalPlayer then
            local targetCharacter = otherPlayer.Character
            if targetCharacter then
                for _, accessory in pairs(targetCharacter:GetChildren()) do
                    if accessory:IsA("Accessory") and accessory:FindFirstChild("Handle") then
                        accessory.Handle.Transparency = 1
                    end
                end
            end
        end
    end
end

local function restoreAccessories()
    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= LocalPlayer then
            local targetCharacter = otherPlayer.Character
            if targetCharacter then
                for _, accessory in pairs(targetCharacter:GetChildren()) do
                    if accessory:IsA("Accessory") and accessory:FindFirstChild("Handle") then
                        accessory.Handle.Transparency = 0
                    end
                end
            end
        end
    end
end

RunService.Heartbeat:Connect(function()
    if autoHitActive then autoHit() end
    if teleportPlayersActive then teleportHeads() end
    if turnAccessoriesInvisibleActive then turnAccessoriesInvisible() end
end)

-- Create Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Killer = Window:AddTab({ Title = "Killer", Icon = "" }),
    AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "" })
})

-- Main Tab functionalities
local MainTab = Tabs.Main

-- Infinite Jump
local infiniteJumpEnabled = false
MainTab:AddToggle("Infinite Jump", {
    Title = "Enable Infinite Jump",
    Default = false,
    Callback = function(state)
        infiniteJumpEnabled = state
        if state then
            LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                if key:lower() == "space" then
                    LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
                end
            end)
        end
    end
})

-- Speed Changer
MainTab:AddSlider("WalkSpeedSlider", {
    Title = "Walk Speed",
    Min = 16,
    Max = 100,
    Default = 16,
    Callback = function(value)
        LocalPlayer.Character.Humanoid.WalkSpeed = value
    end
})

-- Jump Power Changer
MainTab:AddSlider("JumpPowerSlider", {
    Title = "Jump Power",
    Min = 50,
    Max = 200,
    Default = 50,
    Callback = function(value)
        LocalPlayer.Character.Humanoid.JumpPower = value
    end
})

-- Killer Tab functionalities
local KillerTab = Tabs.Killer

-- Toggle for Auto Kill and other functionalities
KillerTab:AddToggle("AutoKillToggle", {
    Title = "Enable Auto Kill",
    Default = false,
    Callback = function(state)
        autoHitActive = state
        teleportPlayersActive = state
        turnAccessoriesInvisibleActive = state
        
        if state then
            setToolProperties()  -- Ensure tool properties are set when toggled on
            autoHit()  -- Start auto hitting when toggled on
        else
            restoreAccessories()  -- Restore accessories when toggled off
        end
    end
})

-- Auto Farm Tab functionalities
local AutoFarmTab = Tabs.AutoFarm

-- Rock Farming functionality (placeholder)
AutoFarmTab:AddButton("Start Rock Farming", function()
    print("Rock farming started!")
    -- Implement your rock farming logic here
end)

-- Misc Tab functionalities
local MiscTab = Tabs.Misc

-- Anti-AFK functionality
MiscTab:AddToggle("AntiAFK", {
    Title = "Enable Anti AFK",
    Default = false,
    Callback = function(state)
        if state then
            local connection
            connection = RunService.RenderStepped:Connect(function()
                LocalPlayer.Character.Humanoid:Move(Vector3.new(0, 0.1, 0), true)
            end)
            MiscTab:OnDestroy(function()
                connection:Disconnect()
            end)
        end
    end
})

-- Time Day functionality (example)
MiscTab:AddButton("Set Time to Day", function()
    game.Lighting.ClockTime = 12 -- Set time to noon
end)

-- Character added event to reset tool properties
LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    backpack = LocalPlayer:WaitForChild("Backpack")
    setToolProperties()
end)

Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()
