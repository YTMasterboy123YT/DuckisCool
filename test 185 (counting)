local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Create the main window
local Window = Fluent:CreateWindow({
    Title = "Ducks Private Script" .. Fluent.Version, 
    SubTitle = "by Duck", 
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Killer = Window:AddTab({ Title = "Killer", Icon = "" }),
    AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "" })
}

-- Save and Interface Managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Build Settings Section
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

-- Input Fields in Main Tab
local MainTab = Tabs.Main

MainTab:AddInput("SpeedInput", {
    Title = "Change Speed",
    Description = "Set the player's speed.",
    Default = "200",
    Placeholder = "Enter speed value",
    Numeric = true,
    Finished = true,
    Callback = function(Value)
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local changeSizeSpeedRemote = ReplicatedStorage:WaitForChild("rEvents"):WaitForChild("changeSpeedSizeRemote")
        changeSizeSpeedRemote:InvokeServer("changeSpeed", tonumber(Value))
        print("Speed changed to:", Value)
    end
})

MainTab:AddInput("SizeInput", {
    Title = "Change Size",
    Description = "Set the player's size.",
    Default = "2",
    Placeholder = "Enter size value",
    Numeric = true,
    Finished = true,
    Callback = function(Value)
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local changeSizeRemote = ReplicatedStorage:WaitForChild("rEvents"):WaitForChild("changeSpeedSizeRemote")
        changeSizeRemote:InvokeServer("changeSize", tonumber(Value))
        print("Size changed to:", Value)
    end
})

MainTab:AddInput("JumpPowerInput", {
    Title = "Change Jump Power",
    Description = "Set the jump power for all players.",
    Default = "100",
    Placeholder = "Enter jump power value",
    Numeric = true,
    Finished = true,
    Callback = function(Value)
        local Players = game:GetService("Players")
        local jumpPowerValue = tonumber(Value)
        for _, player in ipairs(Players:GetPlayers()) do
            local character = player.Character
            if character then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.JumpPower = jumpPowerValue
                end
            end
        end
        print("Jump power changed to:", Value)
    end
})

-- Notify that the GUI has been loaded
Fluent:Notify({
    Title = "Fluent",
    Content = "The GUI has been loaded successfully.",
    Duration = 5
})
