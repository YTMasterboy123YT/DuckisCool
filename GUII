local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Fluent " .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Killer = Window:AddTab({ Title = "Killer", Icon = "" }),
    AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "" })
}

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Main Tab
do
    -- Infinite Jump Toggle
    local infiniteJumpToggle = Tabs.Main:AddToggle("InfiniteJump", { Title = "Infinite Jump", Default = false })
    infiniteJumpToggle:OnChanged(function()
        if infiniteJumpToggle.Value then
            UserInputService.JumpRequest:Connect(function()
                LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end)
        end
    end)

    -- Set Size IntValue Input
    local sizeInput = Tabs.Main:AddInput("SetSize", {
        Title = "Set Size",
        Description = "Enter the size value",
        Default = "2",
        Placeholder = "Size",
        Numeric = true,
        Finished = true,
        Callback = function(Value)
            LocalPlayer.Character.Humanoid.Size = tonumber(Value)
        end
    })

    -- Set Speed IntValue Input
    local speedInput = Tabs.Main:AddInput("SetSpeed", {
        Title = "Set Speed",
        Description = "Enter the speed value",
        Default = "16",
        Placeholder = "Speed",
        Numeric = true,
        Finished = true,
        Callback = function(Value)
            LocalPlayer.Character.Humanoid.WalkSpeed = tonumber(Value)
        end
    })

    -- Change Game Time Dropdown
    local gameTimeDropdown = Tabs.Main:AddDropdown("ChangeGameTime", {
        Title = "Change Game Time",
        Values = {"Morning", "Afternoon", "Night"},
        Multi = false,
        Default = 1,
    })
    gameTimeDropdown:OnChanged(function(Value)
        if Value == "Morning" then
            game.Lighting.ClockTime = 6
        elseif Value == "Afternoon" then
            game.Lighting.ClockTime = 16
        elseif Value == "Night" then
            game.Lighting.ClockTime = 0
        end
    end)

    -- Anti AFK
    local antiAFK = Tabs.Main:AddToggle("AntiAFK", { Title = "Anti AFK", Default = false })
    antiAFK:OnChanged(function()
        if antiAFK.Value then
            while antiAFK.Value do
                LocalPlayer.Idled:Wait()
                LocalPlayer:Move(Vector3.new(0, 0, 0))
                wait(1)
            end
        end
    end)

    -- Player Chat Logging
    Players.PlayerAdded:Connect(function(player)
        player.Chatted:Connect(function(message)
            print(player.Name .. ": " .. message)
        end)
    end)
end

-- Killer Tab
do
    -- Auto Hit
    local autoHitToggle = Tabs.Killer:AddToggle("AutoHit", { Title = "Auto Hit", Default = false })
    autoHitToggle:OnChanged(function()
        while autoHitToggle.Value do
            LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
            LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
            wait(0.1)
        end
    end)

    -- Teleport Players
    local teleportPlayersToggle = Tabs.Killer:AddToggle("TeleportPlayers", { Title = "Teleport Players", Default = false })
    teleportPlayersToggle:OnChanged(function()
        while teleportPlayersToggle.Value do
            wait(0.1)
            for _, otherPlayer in pairs(Players:GetPlayers()) do
                if otherPlayer ~= LocalPlayer then
                    local targetCharacter = otherPlayer.Character
                    if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
                        targetCharacter:SetPrimaryPartCFrame(LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 5, 0))
                    end
                end
            end
        end
    end)

    -- Invisibility
    local invisibilityToggle = Tabs.Killer:AddToggle("Invisibility", { Title = "Invisibility", Default = false })
    invisibilityToggle:OnChanged(function()
        while invisibilityToggle.Value do
            for _, otherPlayer in pairs(Players:GetPlayers()) do
                if otherPlayer ~= LocalPlayer then
                    local targetCharacter = otherPlayer.Character
                    if targetCharacter then
                        for _, part in pairs(targetCharacter:GetChildren()) do
                            if part:IsA("BasePart") then
                                part.Transparency = 1
                            elseif part:IsA("Accessory") then
                                part.Handle.Transparency = 1
                            end
                        end
                    end
                end
            end
            wait(0.1)
        end
    end)
end

-- Auto Farm Tab
do
    -- Add your auto farm features here
end

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Build the interface and save manager
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Main)
SaveManager:BuildConfigSection(Tabs.Main)

-- Select the first tab
Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

-- Load any autoload config
SaveManager:LoadAutoloadConfig()
