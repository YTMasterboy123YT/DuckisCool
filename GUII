local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Fluent " .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Define Tabs
local MainTab = Window:AddTab({ Title = "Main", Icon = "" }) -- Empty
local KillerTab = Window:AddTab({ Title = "Killer", Icon = "" }) -- Empty
local TOOLSpeedTab = Window:AddTab({ Title = "TOOLSpeed", Icon = "" }) -- Empty
local SettingsTab = Window:AddTab({ Title = "Settings", Icon = "settings" })

-- Settings Tab
SettingsTab:AddLabel("Addons:")
SettingsTab:AddLabel("SaveManager: Allows you to have a configuration system")
SettingsTab:AddLabel("InterfaceManager: Allows you to have an interface management system")

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- Set folder for managing interface and save data
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

-- Build the interface and config sections in the Settings tab
InterfaceManager:BuildInterfaceSection(SettingsTab)
SaveManager:BuildConfigSection(SettingsTab)

-- Notify when the script is loaded
Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

-- Load auto-config if applicable
SaveManager:LoadAutoloadConfig()

-- Show the GUI
Fluent:Init()
