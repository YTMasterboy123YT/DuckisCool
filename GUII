local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Fluent " .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Utilities = Window:AddTab({ Title = "Utilities", Icon = "tools" }),
    PlayerSettings = Window:AddTab({ Title = "Player Settings", Icon = "user" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")

-- Auto Hit (Any Tool)
local autoHitActive = false
local function autoHit()
    while autoHitActive do
        local equippedTool = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool")
        if equippedTool and equippedTool.Enabled then
            equippedTool:Activate()
        end
        wait(0.1)
    end
end

Tabs.Main:AddToggle("AutoHitToggle", {
    Title = "Enable Auto Hit",
    Default = false,
    Callback = function(value)
        autoHitActive = value
        if value then
            autoHit()
        end
    end
})

-- Auto Kill
Tabs.Main:AddButton({
    Title = "Auto Kill",
    Callback = function()
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                -- Your auto kill logic here (e.g., invoke a remote event)
            end
        end
    end
})

-- Edit Hit Speed
Tabs.PlayerSettings:AddSlider("HitSpeedSlider", {
    Title = "Set Hit Speed",
    Min = 0.1,
    Max = 5,
    Default = 1,
    Callback = function(value)
        -- Implement hit speed adjustment logic here
    end
})

-- No Kill
_G.noKillList = {}
local function addToNoKillList(displayName)
    for _, player in pairs(Players:GetPlayers()) do
        if player.DisplayName:lower() == displayName:lower() then
            _G.noKillList[player.Name] = true
            makePlayerVisible(player)
            break
        end
    end
end

local function makePlayerVisible(player)
    local character = player.Character
    if character then
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Transparency = 0
            elseif part:IsA("BillboardGui") then
                part.Enabled = true
            end
        end
    end
end

Tabs.Main:AddInput("NoKillInput", {
    Title = "Add to No-Kill List",
    Placeholder = "Enter Display Name",
    Callback = function(value)
        addToNoKillList(value)
    end
})

-- Anti AFK
local function antiAFK()
    while true do
        LocalPlayer.Idled:Wait()
        LocalPlayer:Move(Vector3.new(0, 0, 0))
        wait(1)
    end
end

Tabs.Utilities:AddButton({
    Title = "Enable Anti-AFK",
    Callback = function()
        antiAFK()
    end
})

-- Chat Spy
local function onPlayerChatted(player, message)
    print(player.Name .. ": " .. message)
end

for _, player in pairs(Players:GetPlayers()) do
    player.Chatted:Connect(function(message)
        onPlayerChatted(player, message)
    end)
end

Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        onPlayerChatted(player, message)
    end)
end)

-- FPS Boost
Tabs.Utilities:AddButton({
    Title = "Enable FPS Boost",
    Callback = function()
        -- Implement FPS boost logic (e.g., adjust settings)
    end
})

-- Gravity Changer
local function changeGravity(value)
    game.Workspace.Gravity = value
end

Tabs.Utilities:AddSlider("GravitySlider", {
    Title = "Set Gravity",
    Min = 0,
    Max = 196.2, -- Default Roblox gravity
    Default = 196.2,
    Callback = function(value)
        changeGravity(value)
    end
})

-- Infinite Jump
local function enableInfiniteJump()
    UserInputService.JumpRequest:Connect(function()
        LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
    end)
end

Tabs.PlayerSettings:AddToggle("InfiniteJumpToggle", {
    Title = "Enable Infinite Jump",
    Default = false,
    Callback = function(value)
        if value then
            enableInfiniteJump()
        end
    end
})

-- Lock Position
local function lockPosition(value)
    if value then
        LocalPlayer.Character.HumanoidRootPart.Anchored = true
    else
        LocalPlayer.Character.HumanoidRootPart.Anchored = false
    end
end

Tabs.Utilities:AddToggle("LockPositionToggle", {
    Title = "Lock Position",
    Default = false,
    Callback = function(value)
        lockPosition(value)
    end
})

-- No Clip
local function setNoClip(character, value)
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = not value
        end
    end
end

Tabs.Main:AddToggle("NoClipToggle", {
    Title = "Enable No-Clip",
    Default = false,
    Callback = function(value)
        if LocalPlayer.Character then
            setNoClip(LocalPlayer.Character, value)
        end
    end
})

-- Set Size
local function setCharacterSize(size)
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.BodyScale.Value = size
    end
end

Tabs.PlayerSettings:AddSlider("SizeSlider", {
    Title = "Set Size",
    Min = 1,
    Max = 5,
    Default = 1,
    Callback = function(value)
        setCharacterSize(value)
    end
})

-- Set Speed
Tabs.PlayerSettings:AddSlider("SpeedSlider", {
    Title = "Set Walk Speed",
    Min = 16,
    Max = 200,
    Default = 16,
    Callback = function(value)
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
            LocalPlayer.Character.Humanoid.WalkSpeed = value
        end
    end
})

-- Set Time
local function setGameTime(timeOfDay)
    if timeOfDay == "Morning" then
        game.Lighting.ClockTime = 6
    elseif timeOfDay == "Afternoon" then
        game.Lighting.ClockTime = 16
    elseif timeOfDay == "Night" then
        game.Lighting.ClockTime = 0
    else
        print("Invalid time of day.")
    end
end

Tabs.Utilities:AddDropdown("TimeDropdown", {
    Title = "Set Game Time",
    Values = {"Morning", "Afternoon", "Night"},
    Callback = function(value)
        setGameTime(value)
    end
})

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

Window:SelectTab(1)
