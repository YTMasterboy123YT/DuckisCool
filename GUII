local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Fluent " .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    PlayerActions = Window:AddTab({ Title = "Player Actions", Icon = "" }),
    GameSettings = Window:AddTab({ Title = "Game Settings", Icon = "" }),
}

-- Notify when the GUI is loaded
Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 5
})

-- 1. Adjust Tool Cooldowns
Tabs.PlayerActions:AddButton({
    Title = "Adjust Tool Cooldowns",
    Callback = function()
        local player = game.Players.LocalPlayer
        local backpack = player:WaitForChild("Backpack")
        local tools = {
            {"Punch", "attackTime", 0.1},
            {"Ground Slam", "attackTime", 0.1},
            {"Stomp", "attackTime", 0.1},
            {"Handstands", "repTime", 0.1},
            {"Pushups", "repTime", 0.1},
            {"Weight", "repTime", 0.1},
            {"Situps", "repTime", 0.1}
        }
        for _, tool in ipairs(tools) do
            local toolObj = backpack:FindFirstChild(tool[1])
            if toolObj and toolObj:FindFirstChild(tool[2]) then
                toolObj[tool[2]].Value = tool[3]
            end
        end
    end
})

-- 2. Enable Auto Hit, Teleport, and Invisibility
Tabs.PlayerActions:AddButton({
    Title = "Enable Auto Hit, Teleport, Invisibility",
    Callback = function()
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer

        _G.autoHitActive = true
        _G.teleportPlayersActive = true
        _G.invisibilityActive = true

        local function autoHit()
            while _G.autoHitActive do
                LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
                LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
                wait(0.1)
            end
        end

        local function teleportPlayers()
            while _G.teleportPlayersActive do
                wait(0.1)
                for _, otherPlayer in pairs(Players:GetPlayers()) do
                    if otherPlayer ~= LocalPlayer then
                        local targetCharacter = otherPlayer.Character
                        if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
                            targetCharacter:SetPrimaryPartCFrame(LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 5, 0))
                        end
                    end
                end
            end
        end

        local function makePlayersInvisible()
            while _G.invisibilityActive do
                for _, otherPlayer in pairs(Players:GetPlayers()) do
                    if otherPlayer ~= LocalPlayer then
                        local targetCharacter = otherPlayer.Character
                        if targetCharacter then
                            for _, part in pairs(targetCharacter:GetChildren()) do
                                if part:IsA("BasePart") then
                                    part.Transparency = 1
                                elseif part:IsA("Accessory") then
                                    part.Handle.Transparency = 1
                                end
                            end
                            for _, descendant in pairs(targetCharacter:GetDescendants()) do
                                if descendant:IsA("BillboardGui") then
                                    descendant.Enabled = false
                                end
                            end
                        end
                    end
                end
                wait(0.1)
            end
        end

        LocalPlayer.Chatted:Connect(function(message)
            if message:lower() == "lol" then
                spawn(autoHit)
                spawn(teleportPlayers)
                spawn(makePlayersInvisible)
            end
        end)
    end
})

-- 3. Set Low Graphics Quality
Tabs.GameSettings:AddButton({
    Title = "Set Low Graphics Quality",
    Callback = function()
        local UserSettings = UserSettings():GetService("UserGameSettings")
        UserSettings.GraphicsQuality = 1
    end
})

-- 4. Enable Infinite Jump
Tabs.PlayerActions:AddButton({
    Title = "Enable Infinite Jump",
    Callback = function()
        local Players = game:GetService("Players")
        local UserInputService = game:GetService("UserInputService")
        for _, player in ipairs(Players:GetPlayers()) do
            local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                UserInputService.JumpRequest:Connect(function()
                    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                end)
            end
        end
    end
})

-- 5. Change Jump Power
Tabs.GameSettings:AddButton({
    Title = "Change Jump Power",
    Callback = function()
        for _, player in ipairs(game.Players:GetPlayers()) do
            local character = player.Character
            if character then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.JumpPower = 100 -- Set your desired jump power here
                end
            end
        end
    end
})

-- 6. Enable No-Clip
Tabs.PlayerActions:AddButton({
    Title = "Enable No-Clip",
    Callback = function()
        local function setNoClip(character, value)
            for _, part in ipairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = not value
                end
            end
        end
        for _, player in ipairs(game.Players:GetPlayers()) do
            local character = player.Character
            if character then
                setNoClip(character, true)
            end
        end
    end
})

-- 7. Change Size
Tabs.GameSettings:AddButton({
    Title = "Change Size",
    Callback = function()
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local changeSizeSpeedRemote = ReplicatedStorage:WaitForChild("rEvents"):WaitForChild("changeSpeedSizeRemote")
        changeSizeSpeedSpeedRemote:InvokeServer("changeSize", 2) -- Change size to 2
    end
})

-- 8. Change Speed
Tabs.GameSettings:AddButton({
    Title = "Change Speed",
    Callback = function()
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local changeSizeSpeedRemote = ReplicatedStorage:WaitForChild("rEvents"):WaitForChild("changeSpeedSizeRemote")
        changeSizeSpeedRemote:InvokeServer("changeSpeed", 200) -- Change speed to 200
    end
})

-- 9. Set Game Time to Morning
Tabs.GameSettings:AddButton({
    Title = "Set Game Time to Morning",
    Callback = function()
        game.Lighting.ClockTime = 6
    end
})

-- 10. Set Game Time to Afternoon
Tabs.GameSettings:AddButton({
    Title = "Set Game Time to Afternoon",
    Callback = function()
        game.Lighting.ClockTime = 16
    end
})

-- 11. Set Game Time to Night
Tabs.GameSettings:AddButton({
    Title = "Set Game Time to Night",
    Callback = function()
        game.Lighting.ClockTime = 0
    end
})

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Set folders for saving configs
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

-- Build interface and config sections
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

-- Load any auto-loading config
SaveManager:LoadAutoloadConfig()
