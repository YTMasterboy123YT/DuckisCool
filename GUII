local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Fluent " .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local player = game.Players.LocalPlayer
local backpack = player:WaitForChild("Backpack")

-- Function to set game time
local function setGameTime(timeOfDay)
    if timeOfDay == "Morning" then
        game.Lighting.ClockTime = 6
    elseif timeOfDay == "Afternoon" then
        game.Lighting.ClockTime = 16
    elseif timeOfDay == "Night" then
        game.Lighting.ClockTime = 0
    else
        print("Invalid time of day.")
    end
end

-- Main Tab
local Main = Window:AddTab({ Title = "Main", Icon = "" })

-- Speed Changer Input
Main:AddInput("Change Speed", {
    Default = "16",
    Numeric = true,
    Callback = function(value)
        player.Character.Humanoid.WalkSpeed = tonumber(value) or 16
    end
})

-- Size Changer Input
Main:AddInput("Change Size", {
    Default = "1",
    Numeric = true,
    Callback = function(value)
        local size = tonumber(value) or 1
        player.Character.Humanoid.Scale = Vector3.new(size, size, size)
    end
})

-- Set Game Time Dropdown
Main:AddDropdown("Game Time", {
    Options = {"Morning", "Afternoon", "Night"},
    Callback = function(selected)
        setGameTime(selected)
    end
})

-- Run All Codes Button
local function executeCodes()
    local codes = {
        "Speedy50", "Epicreward500", "Launch250", "Musclestorm50",
        "Spacegems50", "Superpunch100", "Frostgems10", "Galaxycrystal50",
        "Skyagility50", "Supermuscle100", "Millionwarriors", "frostgems10",
        "epicreward500", "galaxycrystal50", "launch250", "spacegems50"
    }
    for _, code in ipairs(codes) do
        game:GetService("ReplicatedStorage").rEvents.codeRemote:InvokeServer(code)
        wait(0.1)
    end
end

Main:AddButton("Run All Codes", {
    Name = "Run All Codes",
    Callback = function()
        executeCodes()
    end
})

-- Toggle for trading all players
local tradingEnabled = false

local function tradeWithAllPlayers()
    local Players = game:GetService("Players")
    while tradingEnabled do
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= Players.LocalPlayer then
                game:GetService("ReplicatedStorage").rEvents.tradingEvent:FireServer("sendTradeRequest", player)
                wait(0.1)
            end
        end
        wait(5)
    end
end

Main:AddToggle("Trade All Players", {
    Name = "Trade All Players",
    Default = false,
    Callback = function(state)
        tradingEnabled = state
        if tradingEnabled then
            tradeWithAllPlayers()
        end
    end
})

-- Killer Tab
local Killer = Window:AddTab({ Title = "Killer", Icon = "" })
Killer:AddToggle("Auto Hit", {
    Name = "Enable Auto Hit",
    Default = false,
    Callback = function(state)
        local tools = {
            {name = "Punch", type = "attackTime"},
            {name = "Ground Slam", type = "attackTime"},
            {name = "Stomp", type = "attackTime"},
            {name = "Handstands", type = "repTime"},
            {name = "Pushups", type = "repTime"},
            {name = "Weight", type = "repTime"},
            {name = "Situps", type = "repTime"}
        }
        while state do
            for _, toolInfo in pairs(tools) do
                local tool = backpack:FindFirstChild(toolInfo.name)
                if tool then
                    local cooldown = tool:FindFirstChild(toolInfo.type)
                    if cooldown then
                        cooldown.Value = 0.1
                        tool:Activate()
                    end
                end
            end
            wait(0.1)
        end
    end
})

-- Settings Tab
local Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
Settings:AddLabel("Configuration Settings")

-- SaveManager and InterfaceManager Setup
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Settings)
SaveManager:BuildConfigSection(Settings)

Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()
