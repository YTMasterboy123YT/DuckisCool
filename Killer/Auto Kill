local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

local autoHitActive = false
local teleportPlayersActive = false
local destroyLimbsActive = false

-- Table to hold original parts and their positions
local originalParts = {}

local function autoHit()
    LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
    LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
end

local function anchorCharacter(character, anchor)
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") then
            part.Anchored = anchor
        end
    end
end

local function teleportHeads()
    local localLeftHand = LocalPlayer.Character:FindFirstChild("LeftHand")

    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= LocalPlayer then
            local targetCharacter = otherPlayer.Character
            if targetCharacter then
                -- Anchor the head to prevent movement
                local head = targetCharacter:FindFirstChild("Head")
                anchorCharacter(targetCharacter, true)  -- Anchor the whole character first

                if head and localLeftHand then
                    local handPosition = localLeftHand.Position
                    head.CFrame = CFrame.new(handPosition + Vector3.new(0, 2, 0))  -- Position head above the left hand
                end
            end
        end
    end
end

local function destroyLimbs()
    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= LocalPlayer then
            local targetCharacter = otherPlayer.Character
            if targetCharacter then
                -- Store original parts and their positions before destroying
                originalParts[otherPlayer.UserId] = {}
                for _, part in pairs(targetCharacter:GetChildren()) do
                    if part.Name ~= "Head" then
                        local partData = {Part = part:Clone(), Position = part.Position}  -- Store clone and position
                        table.insert(originalParts[otherPlayer.UserId], partData)  -- Store data
                        part:Destroy()  -- Destroy part
                    end
                end
            end
        end
    end
end

local function restoreLimbs()
    for userId, parts in pairs(originalParts) do
        local otherPlayer = Players:GetPlayerByUserId(userId)
        if otherPlayer then
            local targetCharacter = otherPlayer.Character
            if targetCharacter then
                for _, partData in pairs(parts) do
                    local partClone = partData.Part
                    partClone.Parent = targetCharacter  -- Reparent the cloned part back to the character
                    partClone.Position = partData.Position  -- Restore original position
                end
            end
        end
    end
    originalParts = {}  -- Clear the stored parts
end

local function unanchorAllExceptHead(character)
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") and part.Name ~= "Head" then
            part.Anchored = false  -- Unanchor all parts except head
        end
    end
end

RunService.Heartbeat:Connect(function()
    if autoHitActive then autoHit() end
    if teleportPlayersActive then teleportHeads() end
    if destroyLimbsActive then destroyLimbs() end
end)

LocalPlayer.Chatted:Connect(function(message)
    if message:lower() == "lol" then
        autoHitActive = true
        teleportPlayersActive = true
        destroyLimbsActive = true
    elseif message:lower() == "off" then
        restoreLimbs()  -- Restore body parts when "off" is typed
        for _, otherPlayer in pairs(Players:GetPlayers()) do
            if otherPlayer ~= LocalPlayer and otherPlayer.Character then
                unanchorAllExceptHead(otherPlayer.Character)  -- Unanchor all parts except head
            end
        end
        autoHitActive = false
        teleportPlayersActive = false
        destroyLimbsActive = false
    end
end)
