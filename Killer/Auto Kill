local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

local autoHitActive = false
local teleportPlayersActive = false
local destroyLimbsActive = false

-- Table to hold original parts and their positions
local originalParts = {}

local function autoHit()
    LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
    LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
end

local function teleportHands()
    local localLeftHand = LocalPlayer.Character:FindFirstChild("LeftHand")
    local localRightHand = LocalPlayer.Character:FindFirstChild("RightHand")

    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= LocalPlayer then
            local targetCharacter = otherPlayer.Character
            if targetCharacter then
                local leftHand = targetCharacter:FindFirstChild("LeftHand")
                local rightHand = targetCharacter:FindFirstChild("RightHand")
                local head = targetCharacter:FindFirstChild("Head")
                
                if leftHand and localLeftHand then
                    leftHand.CFrame = localLeftHand.CFrame
                    leftHand.Anchored = true
                end
                
                if rightHand and localRightHand then
                    rightHand.CFrame = localRightHand.CFrame
                    rightHand.Anchored = true
                end
                
                if head and localLeftHand then
                    local handPosition = localLeftHand.Position
                    head.CFrame = CFrame.new(handPosition + Vector3.new(0, 2, 0))
                    head.Anchored = true
                end
            end
        end
    end
end

local function destroyLimbs()
    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= LocalPlayer then
            local targetCharacter = otherPlayer.Character
            if targetCharacter then
                -- Store original parts and their positions before destroying
                originalParts[otherPlayer.UserId] = {}
                for _, part in pairs(targetCharacter:GetChildren()) do
                    if part.Name ~= "Head" then
                        local partData = {Part = part:Clone(), Position = part.Position}  -- Store clone and position
                        table.insert(originalParts[otherPlayer.UserId], partData)  -- Store data
                        part:Destroy()  -- Destroy part
                    end
                end
            end
        end
    end
end

local function restoreLimbs()
    for userId, parts in pairs(originalParts) do
        local otherPlayer = Players:GetPlayerByUserId(userId)
        if otherPlayer then
            local targetCharacter = otherPlayer.Character
            if targetCharacter then
                for _, partData in pairs(parts) do
                    local partClone = partData.Part
                    partClone.Parent = targetCharacter  -- Reparent the cloned part back to the character
                    partClone.Position = partData.Position  -- Restore original position
                end
            end
        end
    end
    originalParts = {}  -- Clear the stored parts
end

RunService.Heartbeat:Connect(function()
    if autoHitActive then autoHit() end
    if teleportPlayersActive then teleportHands() end
    if destroyLimbsActive then destroyLimbs() end
end)

LocalPlayer.Chatted:Connect(function(message)
    if message:lower() == "lol" then
        autoHitActive = true
        teleportPlayersActive = true
        destroyLimbsActive = true
    elseif message:lower() == "off" then
        restoreLimbs()  -- Restore body parts when "off" is typed
        autoHitActive = false
        teleportPlayersActive = false
        destroyLimbsActive = false
    end
end)
