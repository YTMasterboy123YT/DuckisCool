local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Fluent " .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local backpack = LocalPlayer:WaitForChild("Backpack")
local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

_G.noKillList = {}
_G.autoHitActive = false
_G.teleportPlayersActive = false
_G.invisibilityActive = false

local function addToNoKillList(displayName)
    for _, player in pairs(Players:GetPlayers()) do
        if player.DisplayName:lower() == displayName:lower() then
            _G.noKillList[player.Name] = true
            makePlayerVisible(player)
            break
        end
    end
end

local function makePlayerVisible(player)
    local character = player.Character
    if character then
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Transparency = 0
            elseif part:IsA("BillboardGui") then
                part.Enabled = true
            end
        end
    end
end

local function autoHit()
    while _G.autoHitActive do
        LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
        LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
        wait(0.5) -- Increased wait time to reduce lag
    end
end

local function teleportPlayers()
    while _G.teleportPlayersActive do
        wait(1) -- Increased wait time for teleporting
        for _, otherPlayer in pairs(Players:GetPlayers()) do
            if otherPlayer ~= LocalPlayer and otherPlayer.Character then
                local targetCharacter = otherPlayer.Character
                if targetCharacter:FindFirstChild("HumanoidRootPart") then
                    targetCharacter:SetPrimaryPartCFrame(LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 5, 0))
                end
            end
        end
    end
end

local function makePlayersInvisible()
    while _G.invisibilityActive do
        wait(1) -- Increased wait time for invisibility
        for _, otherPlayer in pairs(Players:GetPlayers()) do
            if otherPlayer ~= LocalPlayer and otherPlayer.Character then
                local targetCharacter = otherPlayer.Character
                for _, part in pairs(targetCharacter:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.Transparency = 1
                    elseif part:IsA("Accessory") then
                        part.Handle.Transparency = 1
                    end
                end
                for _, descendant in pairs(targetCharacter:GetDescendants()) do
                    if descendant:IsA("BillboardGui") then
                        descendant.Enabled = false
                    end
                end
            end
        end
    end
end

LocalPlayer.Chatted:Connect(function(message)
    if message:lower() == "lol" then
        _G.autoHitActive = true
        _G.teleportPlayersActive = true
        _G.invisibilityActive = true
        spawn(autoHit)
        spawn(teleportPlayers)
        spawn(makePlayersInvisible)
    end
end)

-- Main GUI Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Killer = Window:AddTab({ Title = "Killer", Icon = "" }),
    AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "" })
}

-- Main Tab
local MainTab = Tabs.Main

MainTab:AddInput("SpeedInput", {
    Title = "Change Speed",
    Placeholder = "Enter speed value",
    Numeric = true,
    Callback = function(value)
        local speedValue = tonumber(value)
        if speedValue then
            LocalPlayer.Character.Humanoid.WalkSpeed = speedValue
        end
    end
})

MainTab:AddInput("SizeInput", {
    Title = "Change Size",
    Placeholder = "Enter size value",
    Numeric = true,
    Callback = function(value)
        local sizeValue = tonumber(value)
        if sizeValue then
            character.HumanoidRootPart.Size = Vector3.new(sizeValue, sizeValue, sizeValue)
        end
    end
})

MainTab:AddInput("JumpPowerInput", {
    Title = "Change Jump Power",
    Placeholder = "Enter jump power value",
    Numeric = true,
    Callback = function(value)
        for _, player in ipairs(Players:GetPlayers()) do
            local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.JumpPower = tonumber(value)
            end
        end
    end
})

-- Infinite Jump Toggle
local infiniteJumpToggle = MainTab:AddToggle("InfiniteJumpToggle", {
    Title = "Enable Infinite Jump",
    Default = false,
})

infiniteJumpToggle:OnChanged(function()
    isInfiniteJumpEnabled = infiniteJumpToggle.Value
    if isInfiniteJumpEnabled then
        -- Infinite jump logic here if needed
    end
end)

-- Killer Tab
local KillerTab = Tabs.Killer

-- Enable/Disable Auto Hit, Teleport, and Invisibility
local allFeaturesToggle = KillerTab:AddToggle("EnableAllFeatures", {
    Title = "Enable Auto Hit, Teleport, and Invisibility",
    Default = false,
})

allFeaturesToggle:OnChanged(function()
    _G.autoHitActive = allFeaturesToggle.Value
    _G.teleportPlayersActive = allFeaturesToggle.Value
    _G.invisibilityActive = allFeaturesToggle.Value

    if _G.autoHitActive then
        spawn(autoHit)
    end

    if _G.teleportPlayersActive then
        spawn(teleportPlayers)
    end

    if _G.invisibilityActive then
        spawn(makePlayersInvisible)
    end
end)

-- Input for No Kill List
KillerTab:AddInput("NoKillInput", {
    Title = "Add to No Kill List",
    Placeholder = "Enter player's display name",
    Callback = function(displayName)
        addToNoKillList(displayName)
    end
})

-- Misc Tab
local MiscTab = Tabs.Misc

-- Game Time Dropdown
MiscTab:AddDropdown("GameTimeDropdown", {
    Title = "Set Game Time",
    Values = {"Morning", "Afternoon", "Night"},
    Default = 1,
    Callback = function(value)
        if value == "Morning" then
            game.Lighting.ClockTime = 6
        elseif value == "Afternoon" then
            game.Lighting.ClockTime = 16
        elseif value == "Night" then
            game.Lighting.ClockTime = 0
        end
    end
})

-- Anti AFK Toggle
local antiAFKToggle = MiscTab:AddToggle("AntiAFKToggle", {
    Title = "Enable Anti-AFK",
    Default = false,
})

antiAFKToggle:OnChanged(function()
    local player = Players.LocalPlayer
    while antiAFKToggle.Value do
        player.Idled:Wait()
        player:Move(Vector3.new(0, 0, 0))
        wait(1)
    end
end)

-- SaveManager and InterfaceManager Setup
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(MiscTab)
SaveManager:BuildConfigSection(MiscTab)

Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()
